#!/usr/bin/env node

const { Command } = require("commander");
const program = new Command();

const version = require("../package").version;
const data = require("../lib/data");

// Waiting for update and notify
require("../lib/update_notifier");

/**
 * Tellmee CLI
 */
program
  .name("tellmee")
  .usage("[options] <command>")
  .description("Command line tellmee Application")
  .version("v" + version, "-v, --version", "Show version")
  .helpOption("-h, --help", "Show usage information")
  .addHelpText("beforeAll", " ")
  .addHelpText("after", "\ntellmee <command> -h Quick help on <command>")
  .addHelpText("after", `\ntellmee@${version}`)
  .addHelpCommand(false)
  .allowExcessArguments(false);

program
  .command("joke")
  .alias("j")
  .description("Show random joke")
  .option(
    "--lang <language>",
    "show random joke according to the language \n→ support (en|fr)",
    "en"
  )
  .option(
    "--cat <category>",
    "show random joke according to a specific category" +
      "\n→ english support () " +
      "\n→ french support (global|dev|dark|limit|beauf|blondes)",
    "any"
  )
  .option("--no-color", "show random joke without any color")
  .action((opts) => jokeCommand(opts));

program
  .command("quote")
  .alias("q")
  .description("Show random quote")
  .option("--no-color", "show random quote without any color")
  .action((opts) => quoteCommand(opts));

program
  .command("inspire")
  .alias("i")
  .description("Show random inspire quote")
  .option("--no-color", "show random inspire without any color")
  .action((opts) => inspireCommand(opts));

program.parse(process.argv);

/**
 * Handle joke command
 *
 * @param options
 */
function jokeCommand(options) {
  // console.log(options);
  let hasCat = () => options.cat !== "any";
  let isFrench = () => options.lang === "fr";

  if (isFrench()) {
    // French joke logic

    if (!hasCat()) {
      data.getFrenchJoke(options.color);
    } else {
      data.getFrenchJokeByType(options.cat, options.color);
    }
  } else {
    // English joke logic

    data.getJoke(options.color);
  }
}

/**
 * Handle quote command
 *
 * @param options
 */
function quoteCommand(options) {
  // console.log(options);

  data.getQuote(options.color);
}

/**
 * Handle inspire command
 *
 * @param options
 */
function inspireCommand(options) {
  // console.log(options);

  data.getInspire(options.color);
}
